<chapter label="1" id="quickstart-chapter">
<title>Quickstart</title>
<sect1 id="quickstart">
 <title>Quickstart</title>
  <sect2 id="starting-dia">
  <title>Starting Dia</title>
   <para>
    You can start Dia by going into the Applications section on the Main Menu
    and clicking on the Dia icon.  Or, you can type <command>dia</command> in
    a xterm window.
   </para>
  </sect2>
  <sect2 id="quickstart-intro">
  <title>Quickstart Introduction</title>
   <para>
    The Dia Quickstart is meant for the user who doesn't want to read a whole
    manual to make a basic diagram.  It will also hold a few screenshots for
    those who are unsure of if this program will do what they want.
   </para>
  </sect2>
  <sect2 id="creating-canvas">
  <title>Creating a Canvas</title>
   <para>
    All diagrams are drawn in their own <emphasis>canvas</emphasis>.  To
    create a new canvas, select
    <menuchoice>
     <guimenu>File</guimenu>
     <guimenuitem>New Diagram</guimenuitem>
    </menuchoice>
    .  A new canvas window will appear.
   </para>
  </sect2>
  <sect2 id="making-diagram">
  <title>Making a Diagram</title>
   <para>
    A diagram is made up of objects.  Objects are shapes that can be different
    colors, shapes, and sizes.  They include everything from 2-bit images to
    full color pictures to text.
   </para>
   <para>
    To add object to the canvas, click on an object in the toolbox and click
    on the canvas.  The selected object will appear.  The object can be
    manipulated mainly by clicking and dragging on the green corner buttons.
   </para>
   <para>                                                                     
    In the toolbox, you can double-click on any object to view its advanced
    properties.  This allows you to customize the stock shape more to your
    liking.
   </para>
   <para>
    Layers are a way of creating multiple-images so that they are one image.
    By doing this, a user can edit one layer without worrying about affecting
    any of the other layers.
   </para>
   <para>
    Transparency is hard at work in Dia.  Transparency allows objects to have
    transparent parts of an object, so that anything behind the transparent
    section shows through.
   </para>
   <para>
    Plug-ins allow the average user to easily add new object types to Dia, to
    help extend its functionability.
   </para>
  </sect2>
  <sect2 id="save-print-diagram">
  <title>Saving and Printing Your Diagram</title>
   <para>                                                                           Saving your diagram and printing your diagram is as easy as creating and
    modifying your document.
   </para>
   <para>
    Dia supports saving and printing to printers.  If you have gnome-print
    installed, the printing is very easy!
   </para>
   <para>
    The print command can be found in the File menu when right-clicking on the
    canvas.
   </para>
   <para>
    Dia supports exporting to numerous formats for excellent web publishing.
    Some of them include:
    <itemizedlist>
     <listitem>
      <para>
       Computer Graphics Metafile (.cgm)
      </para>
     </listitem>
     <listitem>
      <para>                                                                           Encapsulated Postscript (.eps)
      </para>
     </listitem>
     <listitem>
      <para>
       Native Dia Format (.dia)
      </para>
     </listitem>
     <listitem>
      <para>
       Portable Network Graphics (.png)
      </para>
     </listitem>
     <listitem>
      <para>
       Scalable Vector Graphics  (.svg)
      </para>
     </listitem>
    </itemizedlist>
   </para>
   </sect2>
   <sect2 id="who-appeal-too">                                                     <title>Who Does Dia Appeal To?</title>
    <para>
     Dia can appeal to many people in a variety of industries.
     <itemizedlist>
      <listitem>
       <para>
        An electrical engineer may use <application>Dia</application> to
        create a diagram to show how their circuit works.
       </para>
      </listitem>
      <listitem>
       <para>
        A computer programmer may use a flow chart to show the execution path
        of their program.
       </para>
      </listitem>
      <listitem>
       <para>
        A network administrator is able to create a diagram to show how their
        company network is layed out.
       </para>
      </listitem>                                                             
     </itemizedlist>
    </para>
   </sect2>
 </sect1>
</chapter>                                              
